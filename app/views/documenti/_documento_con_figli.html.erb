<div id="<%= dom_id documento %>" class="w-full item mb-6" data-controller="tax-reveal">

	<!-- Documento Padre -->
	<%= tag.header class: ["px-4 py-2 flex items-center justify-between border rounded-tl-lg rounded-tr-lg", documento_header_bg_classes(documento)] do %>

		<%= tag.div class: "block sm:flex gap-4 items-start" do %>

			<%= tag.div class: "flex flex-shrink-0 items-center justify-start gap-2" do %>
				<%= check_box_tag "documento_ids[]",
					documento.id,
					false,
					id: "documento_#{documento.id}",
					class: "w-7 h-7 mr-2 rounded-full border-2 border-indigo-300 text-indigo-600 outline-none ring-0 focus:ring-2 focus:ring-indigo-600 focus:ring-offset-0",
					data: {action: "input->bulk-actions#count"} %>

				<%= link_to documento_path(documento), class: "text-sm font-semibold hover:font-bold hover:text-blue-500", data: { turbo_frame: :_top } do %>
					<%= tag.div documento&.causale&.causale %>
					<%= tag.div "#{documento.numero_documento} del #{documento.data_documento.strftime("%d-%m-%Y")}", class: "text-xs font-semibold text-gray-600 hover:text-blue-500" %>
				<% end %>

				<!-- Badge documenti derivati -->
				<% if documento.documenti_derivati.any? %>
					<span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-bold bg-blue-100 text-blue-800">
						+<%= documento.documenti_derivati.count %> derivati
					</span>
				<% end %>
			<% end %>

			<%= tag.div class: ["text-sm text-gray-500 ", "text-white": @documento == documento] do %>
				<div class="group-[.show-scuola]:hidden flex items-center gap-2">
					<%= render partial: "clientables/#{documento.clientable.class.name.underscore}_card", locals: { clientable: documento.clientable } %>
				</div>

				<%= tag.p documento.referente, class: "mt-2 text-xs" %>

				<%= tag.div class: "text-xs" do %>
					<%= tag.div simple_format(documento.note), class: "max-h-8 overflow-hidden hover:max-h-none transition-all duration-200" %>
				<% end %>

			<% end %>

		<% end %>

		<div class="flex flex-col sm:flex-row gap-2 wrap">
			<% if documento.incompleto? %>
				<%= component 'tax_button',
						caption: "",
						svg_file: "icon-trash-real.svg",
						color: "red",
						url: documento_path(documento),
						data_attr: { turbo_method: :delete } %>
			<% end %>

			<% unless hotwire_native_app? %>
				<%= component 'tax_button',
						caption: "",
						svg_file: "icon-pencil.svg",
					color: "yellow",
					url: documento_step_path(documento, Documento.form_steps.keys.first),
					data_attr: { turbo_frame: :_top} %>
				<%= component 'tax_button',
						caption: "",
						svg_file: "icon-print.svg",
						color: "white",
						url: documento_url(documento, format: :pdf),
						target: "_blank" %>
				<%= component 'tax_button',
						svg_file: "icon-chevron-right.svg",
						color: "transparent",
						data_attr: { action: "click->tax-reveal#toggle", tax_reveal_target: "chevron"} %>
			<% else %>
				<%= component 'tax_button',
					svg_file: "icon-chevron-right.svg",
					color: "transparent",
					url: documento_path(documento),
					data_attr: { turbo_frame: :_top } %>
			<% end %>
		</div>
	<% end %>

	<!-- Righe del documento padre raggruppate per sotto-documento -->
	<% unless hotwire_native_app? %>
		<div data-tax-reveal-target="item" class="hidden border-l border-r border-gray-300">

			<%
				# Helper per raccogliere tutte le righe in modo ricorsivo
				def collect_all_descendant_righe(doc, collected = {})
					doc.documenti_derivati.each do |figlio|
						figlio.righe.each { |riga| collected[riga.id] = riga }
						collect_all_descendant_righe(figlio, collected)
					end
					collected
				end

				# Righe del documento padre che NON sono nei figli
				tutte_righe_figli = collect_all_descendant_righe(documento)
				righe_solo_padre = documento.righe.reject { |riga| tutte_righe_figli.key?(riga.id) }
			%>

			<!-- Righe del documento padre che non sono condivise con i figli -->
			<% if righe_solo_padre.any? %>
				<div class="border-t-2 <%= causale_border_class(documento.causale) %> <%= causale_section_bg_class(documento.causale) %>">
					<div class="px-4 py-2 <%= causale_bg_class(documento.causale) %> border-b <%= causale_border_class(documento.causale) %> flex items-center gap-2">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-gray-600">
							<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
						</svg>
						<span class="text-xs font-bold text-gray-700 uppercase">
							
						</span>
					</div>
					<ul class="bg-white">
						<% righe_solo_padre.each do |riga| %>
							<%= render partial: "righe/riga_item", locals: { riga: riga } %>
						<% end %>
					</ul>
				</div>
			<% end %>

			<!-- Documenti derivati con le loro righe dal documento padre (raggruppate) -->
			<% documento.documenti_derivati.order(:data_documento).each do |doc_figlio| %>
				<div class="border-t-2 <%= causale_border_class(doc_figlio.causale) %> <%= causale_section_bg_class(doc_figlio.causale) %>">
					<!-- Header documento figlio -->
					<div class="px-4 py-2 <%= causale_bg_class(doc_figlio.causale) %> border-b <%= causale_border_class(doc_figlio.causale) %> flex items-center justify-between">
						<div class="flex items-center gap-3">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-blue-600">
								<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
							</svg>
							<span class="text-xs font-bold text-blue-900 uppercase">
								<%= doc_figlio.causale&.causale %>
							</span>
							<%= link_to documento_path(doc_figlio), class: "text-xs font-semibold text-blue-700 hover:text-blue-900 underline", data: { turbo_frame: :_top } do %>
								#<%= doc_figlio.numero_documento %> del <%= doc_figlio.data_documento.strftime("%d-%m-%Y") %>
							<% end %>

							<!-- Badge documenti nipoti -->
							<% if doc_figlio.documenti_derivati.any? %>
								<span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-bold bg-purple-100 text-purple-800">
									+<%= doc_figlio.documenti_derivati.count %> sotto-documenti
								</span>
							<% end %>
						</div>
						<div class="flex items-center gap-2">
							<span class="text-xs text-blue-700">
								<%= doc_figlio.status&.titleize %>
							</span>
							<% if doc_figlio.pagato_il %>
								<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
									Pagato
								</span>
							<% end %>
						</div>
					</div>

					<%
						# Righe del documento padre che appartengono a questo figlio
						righe_figlio_ids = doc_figlio.righe.pluck(:id)
						righe_del_padre_per_figlio = documento.righe.select { |riga| righe_figlio_ids.include?(riga.id) }
					%>

					<!-- Documenti nipoti (livello 2) con le loro righe -->
					<% if doc_figlio.documenti_derivati.any? %>
						<% doc_figlio.documenti_derivati.order(:data_documento).each do |doc_nipote| %>
							<%
								# Righe del documento padre che appartengono a questo nipote
								righe_nipote_ids = doc_nipote.righe.pluck(:id)
								righe_del_padre_per_nipote = documento.righe.select { |riga| righe_nipote_ids.include?(riga.id) }
							%>
							<div class="border-t <%= causale_border_class(doc_nipote.causale) %> <%= causale_section_bg_class(doc_nipote.causale) %> ml-6">
								<!-- Header documento nipote -->
								<div class="px-4 py-2 <%= causale_bg_class(doc_nipote.causale) %> border-b <%= causale_border_class(doc_nipote.causale) %> flex items-center justify-between">
									<div class="flex items-center gap-2">
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 text-purple-600">
											<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
										</svg>
										<span class="text-xs font-semibold text-purple-900">
											<%= doc_nipote.causale&.causale %>
										</span>
										<%= link_to documento_path(doc_nipote), class: "text-xs text-purple-700 hover:text-purple-900 underline", data: { turbo_frame: :_top } do %>
											#<%= doc_nipote.numero_documento %> del <%= doc_nipote.data_documento.strftime("%d-%m-%Y") %>
										<% end %>
									</div>
									<div class="flex items-center gap-2">
										<span class="text-xs text-purple-700">
											<%= doc_nipote.status&.titleize %>
										</span>
										<% if doc_nipote.pagato_il %>
											<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
												Pagato
											</span>
										<% end %>
									</div>
								</div>

								<!-- Righe del documento padre per questo nipote -->
								<% if righe_del_padre_per_nipote.any? %>
									<ul class="bg-white">
										<% righe_del_padre_per_nipote.each do |riga| %>
											<%= render partial: "righe/riga_item", locals: { riga: riga } %>
										<% end %>
									</ul>
								<% end %>
							</div>
						<% end %>
					<% else %>
						<!-- Righe del documento padre per questo figlio (se non ha nipoti) -->
						<% if righe_del_padre_per_figlio.any? %>
							<ul class="bg-white">
								<% righe_del_padre_per_figlio.each do |riga| %>
									<%= render partial: "righe/riga_item", locals: { riga: riga } %>
								<% end %>
							</ul>
						<% end %>
					<% end %>
				</div>
			<% end %>
		</div>
	<% end %>

	<!-- Footer con totali aggregati -->
	<%= tag.footer class: ["p-4 border border-t-0 border-gray-300 last:rounded-b-lg last:shadow-md grid grid-cols-6 sm:grid-cols-8", documento_footer_bg_classes(documento)] do %>

		<%= tag.div class: "col-span-6 sm:col-span-8 flex gap-2 sm:gap-4 mb-2" do %>
			<%= render "documenti/status_badges", documento: documento %>
		<% end %>

		<%= tag.div class: "col-span-3 sm:col-span-2 flex gap-2 sm:gap-4" do %>
			<%
				# I libri sono solo quelli del documento padre (che contiene già tutte le righe)
				tutti_libri = documento.righe.map(&:libro).uniq
			%>
			<%= render Avatar::StackedLibriComponent.new(libri: tutti_libri) %>
		<% end %>

		<div class="col-start-4 sm:col-start-5 col-span-1 px-3 text-sm font-bold text-right leading-6 text-gray-900">
			<%
				# Totale copie del documento padre (che contiene già tutte le righe)
				totale_copie = documento.totale_copie
			%>
			<%= totale_copie %>
		</div>

		<div class="col-start-5 sm:col-start-7 col-span-2 pl-3 text-sm font-bold text-right leading-6 text-gray-900">
			<%
				# Totale importo del documento padre (che contiene già tutte le righe)
				totale_importo = documento.totale_importo
			%>
			<%= number_to_currency totale_importo, locale: :it %>
		</div>

	<% end %>

</div>
