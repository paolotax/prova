
<% content_for :title, "Libri" %>

<% content_for :header do %>
    <%= component "heading/with_actions" do |heading| %>
        
        <% heading.with_action do %>
            <%= tag.div class: "hidden xl:flex xl:flex-row items-center gap-4 px-4 py-2.5 bg-gray-200 rounded-md" do %>
                
                <%= form_for @import, url: libri_importer_index_path, method: :post, multipart: :true do |f| %>
                    <%= tag.div class: "flex flex-row items-center" do %>
                        <%= f.file_field :file, accept:  'text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel' %>
                        <%= component('button', busy_content_css: 'flex [[disabled]_&]:opacity-0') do |button| %>
                            <% button.with_busy_content(css: "absolute inset-0 w-full justify-center items-center") do %>
                                <svg stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="size-4"><style>.spinner{transform-origin:center; animation:spinner_outside 2s linear infinite}.spinner circle{stroke-linecap:round;animation:spinner_inside 1.5s ease-in-out infinite}@keyframes spinner_outside{100%{transform:rotate(360deg)}}@keyframes spinner_inside{0%{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%{stroke-dasharray:42 150;stroke-dashoffset:-16}95%,100%{stroke-dasharray:42 150;stroke-dashoffset:-59}}</style><g class="spinner"><circle cx="12" cy="12" r="9.5" fill="none" stroke-width="2"></circle></g></svg>
                            <% end %>
                            importa
                            <br/>
                            csv xlsx
                        <% end %>
                    <% end %>
                <% end %>

                <%= form_with url: import_ministeriali_libri_importer_index_path, method: :post do |f| %>
                    <%= component('button', busy_content_css: 'flex [[disabled]_&]:opacity-0') do |button| %>
                        <% button.with_busy_content(css: "absolute inset-0 w-full justify-center items-center") do %>
                            <svg stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="size-4"><style>.spinner{transform-origin:center; animation:spinner_outside 2s linear infinite}.spinner circle{stroke-linecap:round;animation:spinner_inside 1.5s ease-in-out infinite}@keyframes spinner_outside{100%{transform:rotate(360deg)}}@keyframes spinner_inside{0%{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%{stroke-dasharray:42 150;stroke-dashoffset:-16}95%,100%{stroke-dasharray:42 150;stroke-dashoffset:-59}}</style><g class="spinner"><circle cx="12" cy="12" r="9.5" fill="none" stroke-width="2"></circle></g></svg>
                        <% end %>
                        <%= inline_svg_tag "icon-folder-arrow-down.svg" %>
                        A.I.E.
                    <% end %>
                <% end %>
            <% end %>
        <% end %>
            
        <% heading.with_action do %>    
            <%= component 'tax_button',
                caption: "Excel",
                svg_file: "icon-excel-bis.svg",
                color: "green",
                url: url_for( controller: "libri", action: "index", format: :xlsx, params: request.query_parameters ),
                data_attr: { controller: "link-modifier", link_modifier_target: "link" } %>
        <% end %>

        <% heading.with_action do %>
            <%= component 'tax_button',  
                    caption: "Nuovo",
                    svg_file: "icon-plus.svg",
                    color: "blue",
                    url: url_for( controller: "libri", action: "new", model: @adozione ),
                    data_attr: { turbo_frame: :modal, action: "click->dialog#open" }
             %>
        <% end %>

        <% heading.with_action do %>
            <%= tag.div class: "block lg:hidden" do %>
                <%= component 'tax_button',
                    caption: "Filtra",
                    svg_file: "icon-funnel.svg",
                    color: "white",
                    url: filtra_libri_path( params: request.query_parameters ),
                    data_attr: { turbo_frame: "slide-over", controller: "link-modifier", link_modifier_target: "link" } %>
            <% end %>
        <% end %>

        <%= h1 {"Libri"} %>

    <% end %>
<% end %>


<% if hotwire_native_app? %>
  <div class="flex items-center gap-2 px-4 py-4">
    <div class="flex-1 relative">
      <%= form_with url: libri_path, method: :get, data: { turbo_frame: "search_results", controller: "search-form" } do |f| %>
        <div class="relative">
          <%= f.search_field :search, 
              class: "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
              placeholder: "Cerca...",
              value: params[:search],
              data: { action: "input->search-form#search" } %>
          
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <%= heroicon "magnifying-glass", options: { class: "h-5 w-5 text-gray-400" } %>
          </div>
        </div>
      <% end %>
    </div>

    <%= link_to filtra_libri_path(params: request.query_parameters),
        class: "inline-flex items-center gap-2 px-4 py-2 bg-white text-gray-700 rounded-lg border border-gray-300",
        data: { turbo_frame: "slide-over" } do %>
      <%= heroicon "funnel", options: { class: "h-5 w-5" } %>
      <span>Filtra</span>
    <% end %>
  </div>
<% end %>


<%= turbo_frame_tag :search_results do %>

    <%# geared_pagination tolto perchÃ¨ non funziona il redirect da destroy %>
    <%= tag.div id: "libri-lista", class: "grid grid-cols-1 lg:pr-[15rem]" do %>
        <p class="only:block hidden py-32 px-4 text-center xl:col-span-2 lg:pr-[15rem]">Whoops! Non ci sono libri </p>
        
        <%= render @page.records %>

        <% unless @page.last? %>
			<%= turbo_frame_tag "load_more",
						src: libri_path(request.query_parameters.merge(page: @page.next_param, format: :turbo_stream)),
						loading: :lazy do %>
				<%= render 'shared/lazy_loading' %>
			<% end %>
		<% end %>
    <% end %>

    <aside class="fixed inset-y-0 right-0 hidden w-72 overflow-y-auto pt-[184px] lg:px-8 lg:block">
        <!-- Secondary column (hidden on smaller screens) -->
        <%= render partial: "filter_form", locals: { reload: true } %>
    </aside>

<% end %>








