<%= render Heading::WithActionsComponent.new(
		wrapper_css: 'flex items-center bg-white justify-between px-4 py-3 mb-4 border border-gray-200 rounded-md shadow-md', 
		level: 'h3') do |heading| %>
	
	<% heading.with_leader do %>
		<%#= render AvatarComponent.new(user: OpenStruct.new(name: "Cam"), size: "xl") %>
	<% end %>
	
	<% heading.with_description { @cliente.comune } %>

	<% heading.with_action do %>
		<%= component 'tax_button',
			caption: "Elimina",
			svg_file: "icon-trash-real.svg",
			color: "red",
			url: url_for( controller: "clienti", action: "destroy", model: @cliente ),
			data_attr: { turbo_method: :delete, turbo_confirm: "Sei sicuro?", turbo_stream: false }  %>
	<% end %>

	<% heading.with_action do %>
		<%= component 'tax_button',
			caption: "Modifica",
			svg_file: "icon-pencil.svg",
			color: "yellow",
			url: url_for( controller: "clienti", action: "edit", model: @cliente ) %>
	<% end %>

	<% heading.with_action do %>	
		<%= component 'tax_button',
			caption: "Indietro",
			svg_file: "icon-arrow-long-left.svg",
			color: "white",
			url: 'javascript:history.back()' %>
	<% end %>

	<% heading.with_action do %>	
		<%= component 'tax_button',
			caption: "Nuovo Documento",
			svg_file: "icon-plus.svg",
			color: "blue",
			url: url_for( controller: "documenti", action: "new", paams: current_user.documenti.build( clientable: @cliente, causale_id: Causale.find_by(causale: "Ordine Cliente" ).id)) %>
	<% end %>

	<%= @cliente.denominazione %>
  
<% end %>

<%= tag.ul  do %>
	<% @situazio.each do |libro| %>
		<%= tag.li class: "grid grid-cols-8" do %>
			<%= tag.p libro["status"], class: "col-span-1" %>
			<%= tag.p libro["causale"], class: "col-span-2" %>

			<%= tag.p libro["titolo"], class: "col-span-3" %>

			<%= tag.p libro["entrate"], class: "col-span-1" %>
			<%= tag.p libro["uscite"], class: "col-span-1" %>
		<% end %>
	<% end %>
<% end %>


<%= render partial: "documenti/documento", collection: @cliente.documenti.order(data_documento: :desc) %>


