kamal app exec -i 'bin/rails console'
kamal app exec -i 'bin/rails runner "Tappa.all.each {|t| if t.giro then t.user = t.giro.user; t.save; end }"'

kamal app exec -i 'bin/rails runner "Adozione.pluck(:stato_adozione).uniq"'
kamal app exec -i 'bin/importmap json'

kamal app exec -i 'bundle exec rake import:new_adozioni'



u = User.find_by_name("enrico")
u.confirm 

User.all.collect {|u| { name: u.name, adozioni: u.mie_adozioni.size, appunti: u.appunti.size, giri: u.giri.size } }

kamal details

kamal app exec -i --reuse bash

ssh root@116.203.224.90 

docker ps

docker logs -ft container

User.all.select { |u| u.confirmed? }

User.all.each { |u| u.confirm unless u.confirmed? }

Appunto.where.not(import_adozione_id: nil).each do |a|
    classe = a.import_adozione.classe
    a.classe = classe
    a.save
end

Adozione.all.each do |a|
  if a.stato_adozione.downcase[0..2] == "com"
    a.tipo = "vendita"
    a.save
  end
end

Adozione.pluck(:stato_adozione).uniq

$ ssh root@<SERVER_IP>
mkdir -p /letsencrypt && touch /letsencrypt/acme.json && chmod 600 /letsencrypt/acme.json
docker network create -d bridge private

kamal env push

kamal accessory boot db

kamal deploy

kamal setup

kamal deploy

kamal lock release

kamal traefik restart

kamal traefik logs
kamal app logs

rm /opt/homebrew/var/postgresql@14/postmaster.pid

brew services restart postgresql@14

docker exec -i prova-db /usr/bin/pg_dump -U prova prova_production > backup.sql

tar --same-permissions -czvf backup.tar.gz backup.sql

kamal accessory exec -i --reuse -v db "/usr/bin/pg_dump -U prova prova_production" > backup.sql



scp root@116.203.224.90:backup.tar.gz . 